{
    "name": "data flow 1",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "Json1",
                        "type": "DatasetReference"
                    },
                    "name": "source1"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "DelimitedText1",
                        "type": "DatasetReference"
                    },
                    "name": "sink1"
                }
            ],
            "transformations": [
                {
                    "name": "flatten1"
                }
            ],
            "scriptLines": [
                "source(output(",
                "          exceededTransferLimit as boolean,",
                "          features as (attributes as (AADT_MAJOR as integer, AADT_MAJOR_ROADWAY_ID as string, AADT_MINOR as integer, AADT_MINOR_ROADWAY_ID as string, COMPLEX_INTERSECTION_IND as boolean, CRASH_INTERSECT_CATEGORY_SN as string, DOT_CNTY_CD as short, DOT_GEOG_DIST_CD as short, EV_DAILY_TRAFFIC as integer, EXTRACT_DATE as long, EXT_NUM_SEG as short, GEOMETRY_TYPE as boolean, GEOMETRY_TYPE_ID as short, INTERCHANGE_IND as string, INTERSECTING_ROADWAYID_MPS as string, INTERSECTING_ROAD_NAMES as string, INTERSECTION_KEY as integer, INTERSECTION_MIN_NODE_ID as integer, INTERSECTION_TYPE_ID as string, INT_NUM_SEG as short, MAP_SOURCE as string, MAX_LANES_NO as short, NUM_LEG_ID as short, OBJECTID as integer, ON_OFF_SYSTEM_IND as string, OTHER_SIGN_IND as string, PXID as integer, SIGNALIZED_IND as boolean, STOP_CONTROL_IND as boolean, TOT_NUM_LEG as short, TOT_NUM_NODES as short, TOT_NUM_SEG as short, URBAN_IND as boolean, USPS_CITY_PRIMARY_ID as short, X_UTM as double, YIELD_CONTROL_IND as boolean, Y_UTM as double), geometry as (paths as double[][][]))[],",
                "          fields as (alias as string, length as short, name as string, type as string)[],",
                "          geometryType as string,",
                "          globalIdFieldName as string,",
                "          objectIdFieldName as string,",
                "          spatialReference as (latestWkid as short, wkid as short)",
                "     ),",
                "     allowSchemaDrift: false,",
                "     validateSchema: true,",
                "     limit: 500,",
                "     ignoreNoFilesFound: false,",
                "     documentForm: 'documentPerLine') ~> source1",
                "source1 foldDown(unroll(features),",
                "     mapColumn(",
                "          features",
                "     ),",
                "     skipDuplicateMapInputs: false,",
                "     skipDuplicateMapOutputs: false) ~> flatten1",
                "flatten1 sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     mapColumn(",
                "          OBJECTID = features.attributes.OBJECTID,",
                "          INTERSECTION_KEY = features.attributes.INTERSECTION_KEY,",
                "          PXID = features.attributes.PXID,",
                "          COMPLEX_INTERSECTION_IND = features.attributes.COMPLEX_INTERSECTION_IND,",
                "          INTERSECTION_TYPE_ID = features.attributes.INTERSECTION_TYPE_ID,",
                "          INTERCHANGE_IND = features.attributes.INTERCHANGE_IND,",
                "          ON_OFF_SYSTEM_IND = features.attributes.ON_OFF_SYSTEM_IND,",
                "          DOT_GEOG_DIST_CD = features.attributes.DOT_GEOG_DIST_CD,",
                "          DOT_CNTY_CD = features.attributes.DOT_CNTY_CD,",
                "          USPS_CITY_PRIMARY_ID = features.attributes.USPS_CITY_PRIMARY_ID,",
                "          INTERSECTING_ROADWAYID_MPS = features.attributes.INTERSECTING_ROADWAYID_MPS,",
                "          INTERSECTING_ROAD_NAMES = features.attributes.INTERSECTING_ROAD_NAMES,",
                "          INT_NUM_SEG = features.attributes.INT_NUM_SEG,",
                "          EXT_NUM_SEG = features.attributes.EXT_NUM_SEG,",
                "          TOT_NUM_SEG = features.attributes.TOT_NUM_SEG,",
                "          TOT_NUM_LEG = features.attributes.TOT_NUM_LEG,",
                "          TOT_NUM_NODES = features.attributes.TOT_NUM_NODES,",
                "          MAX_LANES_NO = features.attributes.MAX_LANES_NO,",
                "          NUM_LEG_ID = features.attributes.NUM_LEG_ID,",
                "          INTERSECTION_MIN_NODE_ID = features.attributes.INTERSECTION_MIN_NODE_ID,",
                "          X_UTM = features.attributes.X_UTM,",
                "          Y_UTM = features.attributes.Y_UTM,",
                "          EV_DAILY_TRAFFIC = features.attributes.EV_DAILY_TRAFFIC,",
                "          AADT_MAJOR = features.attributes.AADT_MAJOR,",
                "          AADT_MAJOR_ROADWAY_ID = features.attributes.AADT_MAJOR_ROADWAY_ID,",
                "          AADT_MINOR = features.attributes.AADT_MINOR,",
                "          AADT_MINOR_ROADWAY_ID = features.attributes.AADT_MINOR_ROADWAY_ID,",
                "          GEOMETRY_TYPE_ID = features.attributes.GEOMETRY_TYPE_ID,",
                "          GEOMETRY_TYPE = features.attributes.GEOMETRY_TYPE,",
                "          CRASH_INTERSECT_CATEGORY_SN = features.attributes.CRASH_INTERSECT_CATEGORY_SN,",
                "          URBAN_IND = features.attributes.URBAN_IND,",
                "          SIGNALIZED_IND = features.attributes.SIGNALIZED_IND,",
                "          STOP_CONTROL_IND = features.attributes.STOP_CONTROL_IND,",
                "          YIELD_CONTROL_IND = features.attributes.YIELD_CONTROL_IND,",
                "          OTHER_SIGN_IND = features.attributes.OTHER_SIGN_IND,",
                "          MAP_SOURCE = features.attributes.MAP_SOURCE,",
                "          EXTRACT_DATE = features.attributes.EXTRACT_DATE",
                "     )) ~> sink1"
            ]
        }
    }
}