name: "06 Set AKS"
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Choose the environment used to deploy urbanos.
        options:
          - dev
          - uat
          - prd
        required: true
  
jobs:
  build:
    runs-on: self-hosted 
    environment: ${{ github.event.inputs.environment }}
     
    steps:
      - name: Install Azure CLI
        id: install
        run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Checkout source code 
        id: checkout
        uses: actions/checkout@v3

      - name: ACR build
        id: build-push-acr
        uses: azure/acr-build@v1
        with:
          service_principal: ${{ secrets.ARM_CLIENT_ID }}
          service_principal_password: ${{ secrets.ARM_CLIENT_SECRET }}
          tenant: ${{ secrets.ARM_TENANT_ID }}
          git_access_token: ${{ secrets.git_access_token }}
          registry: acrurbanosspkdeveus.azurecr.io
          repository: azuredocs
          image:  azure-vote-front
          folder: azure-vote
          branch: main
          tag: ${{ github.sha }}

      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
    
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ vars.RESOURCE_GROUP }}' 
          cluster-name: '${{ vars.CLUSTER_NAME }}'
    
      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Install Azure kubelogin
        id: install-kubelogin
        run: sudo snap install kubelogin

      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
            https://raw.githubusercontent.com/UrbanOS-Public/sky_blue/main/azure-vote-all-in-one-redis.yaml
          images: 'acrurbanosspkdeveus.azurecr.io/azuredocs/azure-vote-front:${{ github.sha }}'
          pull-images: false 
          private-cluster: true

      - name: Cleanup
        if: ${{ always() }}
        run: sudo docker ps -q | xargs -n 1 -P 8 -I {} docker stop {}